@model ProductVM

@{
	ViewBag.PageTitle = "Product Managment";
	ViewBag.CardTitle = "Edit Product";
	ViewData["Title"] = "Edit";
}

<div class="row">
	<div class="col-md-4">
		<form asp-action="Edit" method="post" enctype="multipart/form-data">
			<input type="hidden" asp-for="Id" />
			<input type="hidden" asp-for="ImgPath" />
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="ProductName" class="control-label"></label>
				<input asp-for="ProductName" class="form-control" />
				<span asp-validation-for="ProductName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ProductDescription" class="control-label"></label>
				<textarea id="mytextarea" asp-for="ProductDescription" class="form-control"></textarea>
				<span asp-validation-for="ProductDescription" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Price" class="control-label"></label>
				<input asp-for="Price" class="form-control" />
				<span asp-validation-for="Price" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="ImgPath" class="control-label"></label>
				<input type="file" name="file" id="imgFile" class="form-control" onchange="showImage(event);" />
			</div>
			<div class="form-group">
				<label asp-for="CategoryId" class="control-label"></label>
				<select asp-for="CategoryId" asp-items="Model.CategoryList" class="form-control">
					<option disabled selected>-- Select Category --</option>
				</select>
			</div>
			<br />
			<div class="form-group">
				<input type="submit" value="Save" class="btn btn-success" />
			</div>
		</form>
	</div>
	<div class="col-md-4">
		<div class="container">
			<img id="ImagePreview" src="~/@Model.ImgPath" width="300" height="300" />
		</div>
	</div>
</div>
<hr />
<div>
	<a asp-action="Index" class="btn btn-primary">Back To List</a>
</div>

@section Scripts {
	<partial name="_ValidationScriptsPartial" />

	<script>
		tinymce.init({
		  selector: '#mytextarea',
		  plugins: [
			// Core editing features
			'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount'
		  ],
		  toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
		  tinycomments_mode: 'embedded',
		  tinycomments_author: 'Author name',
		  mergetags_list: [
			{ value: 'First.Name', title: 'First Name' },
			{ value: 'Email', title: 'Email' },
		  ],
		  ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
		});
	</script>
	<script>
		function showImage(event) {
			var imageHolder = document.getElementById("ImagePreview")
			imageHolder.src = URL.createObjectURL(event.target.files[0]);
		}
	</script>
}